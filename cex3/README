1)
a)the function will trim the last character of the string str
b)the code should verify that the last byte of the string is '\0', otherwise it may cause problems
the code can print success or failed, depends on the platform & the last piece of software that
held that piece of memory before


2)
the file b.c include the file a.h, so a should appear in the dependencies list of B
the fixed line:

B.o: a.o b.c b.h

3)
see file Q3.c
in general it split the problem for two cases: step is non-zero - then just look for each character if it can be
the start of str2, and if step is zero it look in all the string looking for each character of str2

4)
see file Board.c
makefile: my makefile contains also commands for making and testing Q3, for creating the tar file
and for installing and uninstalling PlayBoard
testing Q4 was too complicated for a Makefile, so it has it's own script, which is not included.

testing:
i used valgrind with each of the supplied files using command
ohad@comp1:~/c++/cex3$ valgrind --tool=memcheck --leak-check=full ./PlayBoard <XO_Dir/xo_io/xo_test_3.in >test3.out
==20964== Memcheck, a memory error detector
==20964== Copyright (C) 2002-2011, and GNU GPL'd, by Julian Seward et al.
==20964== Using Valgrind-3.7.0 and LibVEX; rerun with -h for copyright info
==20964== Command: ./PlayBoard
==20964== 
==20964== 
==20964== HEAP SUMMARY:
==20964==     in use at exit: 0 bytes in 0 blocks
==20964==   total heap usage: 58 allocs, 58 frees, 1,224 bytes allocated
==20964== 
==20964== All heap blocks were freed -- no leaks are possible
==20964== 
==20964== For counts of detected and suppressed errors, rerun with: -v
==20964== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 2 from 2)
ohad@comp1:~/c++/cex3$ diff test3.out XO_Dir/xo_io/xo_test_3.out 
ohad@comp1:~/c++/cex3$ 

i repeated this for each of the testing files, to make sure my program has no memory problems and no
logical problems